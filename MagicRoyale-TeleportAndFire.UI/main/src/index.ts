// import Post from './Post' // заимпортить класс
import './styles.css' 
import './testBabel.ts'
import { Engine } from "./engine/engine";

function initialize() {
    let gameCanvasParrentElement = document.getElementById('gameContent');
    let engine = new Engine(gameCanvasParrentElement);

    createSprites(engine);
}

function createSprites(engine: Engine){

}


window.onload = () => {
    initialize();
};

// САМ ДВИЖОК
// - Каждыйе n-мс выполнять цикл, отдельно от отрисовки
// - Режим разработчика:
//   -- переключать дебаг\нормальный режим по горячей клавиши
//   -- логгирование (в консоль)
//   -- [v.2] добавлять\удалять объекты на карте, сохранять карту
//   -- иметь вывод текста на UI для дебага
//      -- просто текст, который кинули в лог
//      -- где сейчас мышь + текущий масштаб
//      -- fps движка (а не отрисовки)
//      -- связь с сервером (пинг)
//      -- событие игрока воспринятое движком
//      -- при нажатии на объект выводится информация об объекте
//      -- видеть "маску"(рамку) спрайтов, чтобы понимать где они реагируют на клик мышью
//         -- зеленым цветом - значит пропускат клик
//         -- фиолетовым цветом - значит на клик должен откликаться
// - Камера
//   -- перемещение
//   -- удаление \ приближение к указанной точке (колесико мыши\движение пальцев)
//   -- фиксация (пока только временная) на указанном объекте (+возможность смещения)
// - Манипуляции с объектом:
//   -- отрисовать спрайт
//   -- типизация спрайта
//   -- крутить спрайт на 360 градусов
//   -- менять ширину, высоту, x,y координаты
//   -- масштабировать картинку (уменьшать\увеличивать)
//   -- указывать фигуру, чтобы пропускать клики в пустоту
//   -- задавать вектор движения
//   -- принимать функции:
//     -- реакция на события:
//        -- начался новый шаг
//        -- навели мышь
//        -- кликнули мышью\пальцем
//        -- [может быть]: нажали\отжали мышь\ зажали
// - Рендеринг:
//   -- отрисовывать\прятать спрайт
//   -- поддерживать слои
//   -- поддерживать поддерживать прозрачность и svg 
//   -- поддерживать анимацию
//   -- сделать координаты спрайта статическими
//   -- [может быть] делать возможным смещение при отрисовке 
//   -- пропускать клик по объекту.  Может отрисовываться выше всех по слою, но при нажатии пропускает клик и отдаем ему того кто ниже
//   -- [может быть] возможность рисовать фигуры
//   -- [может быть] писать текст поверх картинки спрайта
//   -- [v1] назначать фон (отличается тем, что не является спрайтом)
//      -- замостить некий фот
//      -- [может быть] получить массив координат блоков фона и отрисовывать их
// - Держатель объектов:
//   -- возможность получить\добавить\удалить\заменить спрайт
//   -- кеширование картинок
//   -- узнать кто выше всего по слою в указанных координатах
//   -- проверит вхождение указанных координат в объект\маску (отдельная сборка геометрия)
// - Движок (+actionController):
//   -- инициализирует все для работы
//   -- доступ к настройкам самого движка
//   -- дает взаимодействовать с камерой
//   -- возможноть добавлять действия на каждый шаг 
//      -- в целом по движку
//      -- [может быть] накидывать на каждый отдельный объект (т.е. когда доходит до него очередь)
//   -- дает взаимодействовать с режимом разработчика
//   -- дает взаимодействовать с держателем объектов
//   -- (v1) Сопоставление "игровых событий" с их обработчиками. Типо шина событий и подписанты на очереди (добавить переменную-коллекцию с делегатами, которые вызываются после того как вызовится главный обработчик события. Главный обработчик отдельно живет от этой коллекции, его можно толкьо задизейблить )
//   -- (v1) Игровая пауза, при том с выбором "застопить" все объекты или только не статические спрайты или конкретные анимации\вектора

// Взаимодействие с сервером
// - 

// Дополнительные фичи
// - Усыпить движок
// - Получить\вставить\удалить куки
// - Проверка телефон или компьютер
// - Сенсорный экран или нет
// - Сделать на весь экран




// Что у нас тут осталось?
// - в actionController сделать главный шаг и подписку на события
// - сделать интерфейсы основных классов
// - сделать mindmap с функционалом (дописывая какие примеры еще надо сделать)
// - сделать сам движок (контейнер доступа)
// - сделать дебаг режим
// - сделать геометрию
// - сделать "кто на этом месте"
// - продебажить
// - сделать примеры:
// -- просто отрисовка спрайта
// -- просто отрисовка анимации
// -- закрутить замедленную анимацию 
// -- статический спрайт + обработчик мыши
// -- действие на каждый шаг: создать 2 объекта
// -- добавляем вектор этим двум объектам
// -- добавляем событие пересечения, когда они взрываются